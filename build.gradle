plugins {
    id 'java'
    id 'io.quarkus'
    id 'com.diffplug.spotless' version '6.24.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-config-yaml'
    
    // Modbus TCP client library
    implementation 'com.digitalpetri.modbus:modbus-tcp:2.1.3'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.42'
    annotationProcessor 'org.projectlombok:lombok:1.18.42'
    
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    
    // Testing dependencies
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testCompileOnly("org.projectlombok:lombok:1.18.42")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.42")
}

group = 'de.bimalo.homeauto'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

spotless {
    enforceCheck = false  // Temporarily disable spotless checks
    java {
        // Basic formatting rules without Google Java Format
        importOrder()
        removeUnusedImports()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
          
        // Ensure consistent line endings
        lineEndings 'UNIX'
        
        // Exclude generated files
        targetExclude 'build/**', 'src/main/resources/**', 'src/test/resources/**'
    }
}
